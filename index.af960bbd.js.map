{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CCeA,SAAS,EAAU,CAAK,EACtB,OAAO,EAAM,OAAO,CAAC,MAAO,GAC9B,CAEA,IAAM,EAAgB,SAAS,aAAa,CAAC,MACvC,EAjBG,AAiBuB,EAAG,EAAc,QAAQ,EAjB3C,GAAG,CAAC,SAAC,CAAjB,EAA+B,MAAA,CAC7B,KAAM,EAAS,SAAS,CACxB,SAAU,EAAS,OAAO,CAAC,QAAQ,CACnC,OAAQ,EAAS,OAAO,CAAC,MAAM,CAC/B,IAAK,EAAS,OAAO,CAAC,GAAG,AAC3B,C,GAeF,AAXU,EASuB,GATd,IAAI,CAAC,SAAC,CAAA,CAAG,CAA1B,EAAgC,OAAA,EAAU,EAAE,MAAM,EAAI,EAAU,EAAE,MAAM,C,GAW1D,OAAO,CAAC,SAAC,CAAA,CAAU,CAAnC,EACE,EAAc,QAAQ,CAAC,EAAG,CAAC,SAAS,CAAG,EAAS,IAAI,CACpD,EAAc,QAAQ,CAAC,EAAG,CAAC,OAAO,CAAC,QAAQ,CAAG,EAAS,QAAQ,CAC/D,EAAc,QAAQ,CAAC,EAAG,CAAC,OAAO,CAAC,MAAM,CAAG,EAAS,MAAM,CAC3D,EAAc,QAAQ,CAAC,EAAG,CAAC,OAAO,CAAC,GAAG,CAAG,EAAS,GAAG,AACvD","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nfunction getEmployees(list) {\n    return list.map(function(employee) {\n        return {\n            name: employee.innerText,\n            position: employee.dataset.position,\n            salary: employee.dataset.salary,\n            age: employee.dataset.age\n        };\n    });\n}\nfunction sortList(list) {\n    return _to_consumable_array(list).sort(function(a, b) {\n        return getNumber(b.salary) - getNumber(a.salary);\n    });\n}\nfunction getNumber(value) {\n    return value.replace(/\\D/g, \"\");\n}\nvar employeesList = document.querySelector(\"ul\");\nvar employees = getEmployees(_to_consumable_array(employeesList.children));\nvar sortedEmployees = sortList(employees);\nsortedEmployees.forEach(function(employee, id) {\n    employeesList.children[id].innerText = employee.name;\n    employeesList.children[id].dataset.position = employee.position;\n    employeesList.children[id].dataset.salary = employee.salary;\n    employeesList.children[id].dataset.age = employee.age;\n});\n\n//# sourceMappingURL=index.af960bbd.js.map\n","'use strict';\n\nfunction getEmployees(list) {\n  return list.map((employee) => ({\n    name: employee.innerText,\n    position: employee.dataset.position,\n    salary: employee.dataset.salary,\n    age: employee.dataset.age,\n  }));\n}\n\nfunction sortList(list) {\n  return [...list].sort((a, b) => getNumber(b.salary) - getNumber(a.salary));\n}\n\nfunction getNumber(value) {\n  return value.replace(/\\D/g, '');\n}\n\nconst employeesList = document.querySelector('ul');\nconst employees = getEmployees([...employeesList.children]);\nconst sortedEmployees = sortList(employees);\n\nsortedEmployees.forEach((employee, id) => {\n  employeesList.children[id].innerText = employee.name;\n  employeesList.children[id].dataset.position = employee.position;\n  employeesList.children[id].dataset.salary = employee.salary;\n  employeesList.children[id].dataset.age = employee.age;\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","getNumber","value","replace","employeesList","document","querySelector","employees","list","children","map","employee","innerText","position","dataset","salary","age","sortedEmployees","sort","a","b","forEach","id"],"version":3,"file":"index.af960bbd.js.map"}